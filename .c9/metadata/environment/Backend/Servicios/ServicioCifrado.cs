{"filter":false,"title":"ServicioCifrado.cs","tooltip":"/Backend/Servicios/ServicioCifrado.cs","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["using Microsoft.AspNetCore.DataProtection;","","namespace Backend.Services","{","    public interface IEncryptionService","    {","        string Protect(string plain);","        string Unprotect(string cipher);","    }","","    public class EncryptionService : IEncryptionService","    {","        private readonly IDataProtector _protector;","","        public EncryptionService(IDataProtectionProvider provider)","        {","            _protector = provider.CreateProtector(\"UserData\");","        }","","        public string Protect(string plain)","        {","            if (string.IsNullOrEmpty(plain)) return plain;","            return _protector.Protect(plain);","        }","","        public string Unprotect(string cipher)","        {","            if (string.IsNullOrEmpty(cipher)) return cipher;","            try { return _protector.Unprotect(cipher); }","            catch { return cipher; } // si no está protegido, regresamos tal cual (compatibilidad)","        }","    }","}",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["using Microsoft.AspNetCore.DataProtection;","","namespace Backend.Services","{","    public interface IEncryptionService","    {","        string Protect(string plain);","        string Unprotect(string cipher);","    }","","    public class EncryptionService : IEncryptionService","    {","        private readonly IDataProtector _protector;","","        public EncryptionService(IDataProtectionProvider provider)","        {","            _protector = provider.CreateProtector(\"UserData\");","        }","","        public string Protect(string plain)","        {","            if (string.IsNullOrEmpty(plain)) return plain;","            return _protector.Protect(plain);","        }","","        public string Unprotect(string cipher)","        {","            if (string.IsNullOrEmpty(cipher)) return cipher;","            try { return _protector.Unprotect(cipher); }","            catch { return cipher; } // si no está protegido, regresamos tal cual (compatibilidad)","        }","    }","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["using Microsoft.AspNetCore.DataProtection;","","namespace Backend.Servicios","{","    public interface IServicioCifrado","    {","        string Proteger(string textoPlano);","        string Desproteger(string textoCifrado);","    }","","    public class ServicioCifrado : IServicioCifrado","    {","        private readonly IDataProtector _protector;","","        public ServicioCifrado(IDataProtectionProvider provider)","        {","            _protector = provider.CreateProtector(\"DatosUsuario\");","        }","","        public string Proteger(string textoPlano)","        {","            if (string.IsNullOrEmpty(textoPlano)) return textoPlano;","            return _protector.Protect(textoPlano);","        }","","        public string Desproteger(string textoCifrado)","        {","            if (string.IsNullOrEmpty(textoCifrado)) return textoCifrado;","            try { return _protector.Unprotect(textoCifrado); }","            catch { return textoCifrado; } ","        }","    }","}",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":9},"end":{"row":20,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1759434894809,"hash":"e3b09df69a2a59aab20c94268a52e4fbc2d83897"}